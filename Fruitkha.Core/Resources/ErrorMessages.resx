<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlreadyConfirmEmail" xml:space="preserve">
    <value>Email is already confirmed</value>
  </data>
  <data name="AttachmentNotFound" xml:space="preserve">
    <value>Attachment not found</value>
  </data>
  <data name="CannotGetFileContentType" xml:space="preserve">
    <value>Cannot get content type of file</value>
  </data>
  <data name="CannotSaveFile" xml:space="preserve">
    <value>Cannot save the file</value>
  </data>
  <data name="ConcurrencyCheck" xml:space="preserve">
    <value>Data has been modified by another user</value>
  </data>
  <data name="ConfirmEmailInvalidCode" xml:space="preserve">
    <value>Wrong code or this code is deprecated, try again!</value>
  </data>
  <data name="EmailNotConfirm" xml:space="preserve">
    <value>First you need to confirm your email address</value>
  </data>
  <data name="FileIsEmpty" xml:space="preserve">
    <value>This file is empty</value>
  </data>
  <data name="FileNameAlreadyExist" xml:space="preserve">
    <value>File with this name already exist</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>File not found</value>
  </data>
  <data name="ImageNotFound" xml:space="preserve">
    <value>Image not found</value>
  </data>
  <data name="IncorrectLoginOrPassword" xml:space="preserve">
    <value>Incorrect login or password</value>
  </data>
  <data name="Invalid2FVCode" xml:space="preserve">
    <value>Invalide Code</value>
  </data>
  <data name="Invalid2StepVerification" xml:space="preserve">
    <value>Invalid 2-step verification provider</value>
  </data>
  <data name="InvalidDateOfEnd" xml:space="preserve">
    <value>Due date should be not in the past</value>
  </data>
  <data name="InvalidImage" xml:space="preserve">
    <value>File must be image</value>
  </data>
  <data name="InvalidRequest" xml:space="preserve">
    <value>Invalid request</value>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Invalid refrash token</value>
  </data>
  <data name="InvalidTokenVerification" xml:space="preserve">
    <value>Invalid token verification</value>
  </data>
  <data name="InviteNotFound" xml:space="preserve">
    <value>This invite not found or it already answered</value>
  </data>
  <data name="NotPermission" xml:space="preserve">
    <value>You don`t have permissions</value>
  </data>
  <data name="NotPermissionDeleteComment" xml:space="preserve">
    <value>Only creator or groupChat owner can delete message</value>
  </data>
  <data name="NotPermissionEditComment" xml:space="preserve">
    <value>Only creator can edit his message</value>
  </data>
  <data name="NotPreview" xml:space="preserve">
    <value>No preview for this file</value>
  </data>
  <data name="OwnerCannotLeaveGroupChat" xml:space="preserve">
    <value>Owner can't leave groupChat</value>
  </data>
  <data name="PasswordIsExist" xml:space="preserve">
    <value>Password is already created</value>
  </data>
  <data name="SendInviteYourself" xml:space="preserve">
    <value>You cannot send invite to your account</value>
  </data>
  <data name="TransactionFailed" xml:space="preserve">
    <value>Transaction failed</value>
  </data>
  <data name="UnknownError" xml:space="preserve">
    <value>Unknown error has occured</value>
  </data>
  <data name="UserAcceptedInvite" xml:space="preserve">
    <value>This user already accepted your invite</value>
  </data>
  <data name="UserAlreadyHasInvite" xml:space="preserve">
    <value>User already has invite, wait for a answer</value>
  </data>
  <data name="UsernameAlreadyExists" xml:space="preserve">
    <value>User with this usernamre already exist</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>User not found</value>
  </data>
  <data name="UserNotMember" xml:space="preserve">
    <value>This user doesn't member of current groupChat</value>
  </data>
  <data name="WrongResetPasswordCode" xml:space="preserve">
    <value>Wrong code or this code is deprecated, try again!</value>
  </data>
</root>